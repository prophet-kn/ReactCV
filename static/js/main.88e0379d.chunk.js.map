{"version":3,"sources":["components/main/main.js","App.js","serviceWorker.js","index.js"],"names":["personal","_","chain","Data","map","key","personal_info","sort","flatten","uniq","head","value","lang","languages","exp","experience","reverse","edu","education","tech","tech_skills","other","other_skills","int","interests","traits","notable_traits","cats","categories","MainContent","props","state","toggled","contactBox","escFunction","bind","toggledButton","event","keyCode","this","setState","document","addEventListener","removeEventListener","content","toggledState","className","fullname","position","c","k","undefined","onClick","e","github","width","height","viewBox","version","fillRule","d","linkedin","cx","cy","rx","ry","email","aria-hidden","phone","location","contactBoxWrap","includes","href","closeButton","orderBy","time","company","title","description","t","length","o","l","school","programme","thesis","graduated","i","mainContent","contactInfo","printPopup","Component","App","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console","log"],"mappings":"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","file":"static/js/main.88e0379d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport _ from 'lodash'\r\nimport Data from '../../data/content.json'\r\n\r\nconst personal = _.chain(Data)\r\n.map((key) => {\r\n  return key.personal_info\r\n})\r\n.sort().flatten().uniq().head().value()\r\n\r\nconst lang = _.chain(Data)\r\n.map((key) => {\r\n  return key.languages\r\n})\r\n.sort().flatten().uniq().value()\r\n\r\nconst exp = _.chain(Data)\r\n.map((key) => {\r\n  return key.experience\r\n})\r\n.sort().reverse().flatten().uniq().value()\r\n\r\nconst edu = _.chain(Data)\r\n.map((key) => {\r\n  return key.education\r\n})\r\n.sort().reverse().flatten().uniq().value()\r\n\r\nconst tech = _.chain(Data)\r\n.map((key) => {\r\n  return key.tech_skills\r\n})\r\n.sort().flatten().uniq().value()\r\n\r\nconst other = _.chain(Data)\r\n.map((key) => {\r\n  return key.other_skills\r\n})\r\n.sort().flatten().uniq().value()\r\n\r\nconst int = _.chain(Data)\r\n.map((key) => {\r\n  return key.interests\r\n})\r\n.sort().flatten().uniq().value()\r\n\r\nconst traits = _.chain(Data)\r\n.map((key) => {\r\n  return key.notable_traits\r\n})\r\n.sort().flatten().uniq().value()\r\n\r\nconst cats = _.chain(Data)\r\n.map((key) => {\r\n  return key.categories\r\n})\r\n.sort().flatten().uniq().value()\r\n\r\nclass MainContent extends Component {\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      toggled: false,\r\n      contactBox: 'https://www.linkedin.com/in/knowosielski/'\r\n    }\r\n    \r\n    this.escFunction = this.escFunction.bind(this)\r\n    this.toggledButton = this.toggledButton.bind(this)\r\n  }\r\n\r\n  escFunction(event) {\r\n    if (event.keyCode === 27 && this.state.toggled !== false) {\r\n      this.setState({toggled: false})\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.escFunction, false)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.escFunction, false)\r\n  }\r\n\r\n  toggledButton(content, key) {\r\n    let toggledState = this.state\r\n    toggledState.toggled = toggledState.toggled === key ? false : key\r\n    this.setState(toggledState)\r\n  }\r\n\r\n  mainContent() {\r\n    return (\r\n      <div className={\"cv\"}>\r\n        <div className={\"cv-wrap-top\"}>\r\n          <div className={\"cv-wrap-top-name\"}>{personal.fullname}</div>\r\n          <div className={\"cv-wrap-top-pos\"}>{personal.position}</div>\r\n        </div>\r\n        <div className={\"cv-wrap-nav\"}>\r\n        {cats.map((c, k) => {\r\n          if (c !== undefined) {\r\n            return (\r\n              <div className={\"cv-wrap-nav-btn\"} key={k} onClick={(e) => {this.toggledButton(c, k)}}>{c}</div>\r\n            )\r\n          }\r\n          else {\r\n            return null\r\n          }\r\n        })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  contactInfo() {\r\n    return (\r\n      <div className={\"cv-wrap-contact\"}>\r\n        <svg onClick={() => {this.setState({contactBox: personal.github})}} width=\"40\" height=\"40\" viewBox=\"0 0 16 16\" version=\"1.1\"><path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"></path></svg>\r\n        <svg onClick={() => {this.setState({contactBox: personal.linkedin})}} width=\"40\" height=\"40\" viewBox=\"0 0 16 16\"><g fillRule=\"nonzero\"><path d=\"M3.733 13h-2.8V3.714h2.8V13zM14 13h-2.8V8.04c0-1.293-.463-1.936-1.38-1.936-.727 0-1.189.36-1.42 1.081V13H5.6s.037-8.357 0-9.286h2.21l.17 1.857h.059c.574-.928 1.491-1.558 2.75-1.558.956 0 1.73.265 2.32.93.595.666.891 1.559.891 2.813V13z\"></path><ellipse cx=\"2.333\" cy=\"1.393\" rx=\"1.447\" ry=\"1.393\"></ellipse></g></svg>\r\n        <svg onClick={() => {this.setState({contactBox: personal.email})}} width=\"40\" height=\"40\" viewBox=\"0 0 14 16\" version=\"1.1\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M0 4v8c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1zm13 0L7 9 1 4h12zM1 5.5l4 3-4 3v-6zM2 12l3.5-3L7 10.5 8.5 9l3.5 3H2zm11-.5l-4-3 4-3v6z\"></path></svg>\r\n        <svg onClick={() => {this.setState({contactBox: personal.phone})}} width=\"40\" height=\"40\" viewBox=\"0 0 10 16\" version=\"1.1\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M9 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM5 15.3c-.72 0-1.3-.58-1.3-1.3 0-.72.58-1.3 1.3-1.3.72 0 1.3.58 1.3 1.3 0 .72-.58 1.3-1.3 1.3zM9 12H1V2h8v10z\"></path></svg>\r\n        <svg onClick={() => {this.setState({contactBox: personal.location})}} width=\"40\" height=\"40\" viewBox=\"0 0 12 16\" version=\"1.1\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M6 0C2.69 0 0 2.5 0 5.5 0 10.02 6 16 6 16s6-5.98 6-10.5C12 2.5 9.31 0 6 0zm0 14.55C4.14 12.52 1 8.44 1 5.5 1 3.02 3.25 1 6 1c1.34 0 2.61.48 3.56 1.36.92.86 1.44 1.97 1.44 3.14 0 2.94-3.14 7.02-5 9.05zM8 5.5c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z\"></path></svg>\r\n        {this.contactBoxWrap()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  contactBoxWrap() {\r\n    if (this.state.contactBox !== '') {\r\n      return (\r\n      <div className={\"cv-wrap-contact-box\"}>\r\n        <span className={\"cv-wrap-contact-box-inner\"}>\r\n          {_.includes(this.state.contactBox, 'https://') === true ? <a href={this.state.contactBox}>{this.state.contactBox}</a> : <span>{this.state.contactBox}</span>}\r\n        </span>\r\n      </div>\r\n      )\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  closeButton() {\r\n    return (\r\n      <svg onClick={() => {this.setState({toggled: false})}} width=\"40\" height=\"40\" viewBox=\"0 0 12 16\" version=\"1.1\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z\"></path></svg>\r\n    )\r\n  }\r\n\r\n  printPopup() {\r\n    // experience\r\n    if (this.state.toggled === 0) {\r\n      return (\r\n        <div className={\"cv-wrap-content\"}>\r\n          <div className={\"cv-wrap-content-inner\"}>\r\n            <h1>_experience</h1>\r\n            {this.closeButton()}\r\n            <div className={\"cv-wrap-content-inner-items\"}>\r\n              {_.orderBy(exp).reverse().map((e, k) => {\r\n                if (e !== undefined) {\r\n                  return (\r\n                    <div key={k} className={\"cv-wrap-content-inner-items-item\"}>\r\n                      <span>{e.time}</span>\r\n                      <span>{e.company}</span>\r\n                      <span>{e.title}</span>\r\n                      <span>{e.description}</span>\r\n                    </div>\r\n                  )\r\n                }\r\n                else {\r\n                  return null\r\n                }\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    // skills\r\n    else if (this.state.toggled === 1) {\r\n      return (\r\n        <div className={\"cv-wrap-content\"}>\r\n          <div className={\"cv-wrap-content-inner\"}>\r\n            <h1>_tech_skills</h1>\r\n            {this.closeButton()}\r\n            <div className={\"cv-wrap-content-inner-items-item skills\"}>\r\n              {tech.map((t, k) => {\r\n                if (t !== undefined) {\r\n                  return (\r\n                    <span key={k}>{t}{tech.length !== k + 2 ? ', ' : ''}</span>\r\n                  )\r\n                }\r\n                else {\r\n                  return null\r\n                }\r\n              })}\r\n            </div>\r\n            <h1>_other_skills</h1>\r\n            <div className={\"cv-wrap-content-inner-items-item skills\"}>\r\n              {other.map((o, k) => {\r\n                if (o !== undefined) {\r\n                  return (\r\n                    <span key={k}>{o}{other.length !== k + 2 ? ', ' : ''}</span>\r\n                  )\r\n                }\r\n                else {\r\n                  return null\r\n                }\r\n              })}\r\n            </div>\r\n            <h1>_languages</h1>\r\n            <div className={\"cv-wrap-content-inner-items-item lang\"}>\r\n              {lang.map((l, k) => {\r\n                return (\r\n                  <span key={k}>{l}</span>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    // education\r\n    else if (this.state.toggled === 2) {\r\n      return (\r\n        <div className={\"cv-wrap-content\"}>\r\n          <div className={\"cv-wrap-content-inner\"}>\r\n            <h1>_education</h1>\r\n            {this.closeButton()}\r\n            {_.orderBy(edu).reverse().map((e, k) => {\r\n              if (e !== undefined) {\r\n                return (\r\n                  <div key={k} className={\"cv-wrap-content-inner-items-item\"}>\r\n                    <span>{e.time}</span>\r\n                    <span>{e.school}</span>\r\n                    <span>{e.programme}</span>\r\n                    {e.thesis !== undefined ? <a href={e.thesis}>Thesis: Benefits of utilising Agile Scrum Management in Web Development projects: A case study at Mirum Agency</a> : null}\r\n                    <br></br>\r\n                    <span>{e.graduated}</span>\r\n                  </div>\r\n                )\r\n              }\r\n              else {\r\n                return null\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    // interests & traits\r\n    else if (this.state.toggled === 3) {\r\n      return (\r\n        <div className={\"cv-wrap-content\"}>\r\n          <div className={\"cv-wrap-content-inner\"}>\r\n            <h1>_interests</h1>\r\n            {this.closeButton()}\r\n            <div className={\"cv-wrap-content-inner-items-item skills\"}>\r\n              {int.map((i, k) => {\r\n                if (i !== undefined) {\r\n                  return (\r\n                    <span key={k}>{i}{int.length !== k + 2 ? ', ' : ''}</span>\r\n                  )\r\n                }\r\n                else {\r\n                  return null\r\n                }\r\n              })}\r\n            </div>\r\n            <h1>_notable_traits</h1>\r\n            <div className={\"cv-wrap-content-inner-items-item skills\"}>\r\n              {traits.map((t, k) => {\r\n                if (t !== undefined) {\r\n                  return (\r\n                    <span key={k}>{t}{traits.length !== k + 2 ? ', ' : ''}</span>\r\n                  )\r\n                }\r\n                else {\r\n                  return null\r\n                }\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"cv-wrap\"}>\r\n        {this.mainContent()}\r\n        {this.contactInfo()}\r\n        {this.printPopup()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default MainContent\r\n","import React from 'react'\nimport MainContent from './components/main/main'\n\nfunction App() {\n  return (\n    <div className={\"cv-app\"}>\n      <MainContent />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './App.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('react-cv-kn'))\n\nserviceWorker.unregister()\n\nconsole.log(\"%cYou really shouldn't be here... but welcome nonetheless!\\nFeel free to snoop around.\\n- prophet-kn, also known as Kacper Nowosielski\", \"font-size: 20px; color: #50e3c2; background-color: rgb(13, 0, 27);\")\n"],"sourceRoot":""}